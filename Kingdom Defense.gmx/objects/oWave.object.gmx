<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oWhileNotWon</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sourceString = "";        //the string which saves the data flow of the wave in full length

counter = 0;

workString = sourceString;              //the string which will be reduced until itï¿½s empty

finish = false;

lastWave = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (counter == 0)
{
    //next part of wave must be started
    
    if (string_count(",",workString) == 0)
    {
        actualPart = workString;
        finish = true;
    }
    else
    {
        break_position = string_pos(",",workString)-1;
        actualPart = string_copy(workString,0,break_position);
    }
    
    if (string_length(string_letters(actualPart)) == 0)
    {
        //part is a waiting part
        counter = real(actualPart);
    }
    else
    {
        //part is a monster to create
        
        ob = noone;
        
        switch(actualPart)
        {
            case "Slime":       ob = oSlime1;
            break;
            case "IceSlime":    ob = oSlime2;
            break;
            case "IceBug":      ob = oIceBug;
            break;
            case "Skull":      ob = oSkull;
            break;
        }
        
        eff = instance_create(oEnemyCastle.x,oEnemyCastle.y,oEffectEnCr1);
        eff.mon = ob;
        eff.flying = scrGetEnemyVar(scrGetEnemyIndex(ob,0),10);
    }
    
    if (finish == false)
    workString = string_copy(workString,break_position+2,string_length(workString));
    else
    {   
        instance_destroy();
    }
}
else
{
    counter -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
