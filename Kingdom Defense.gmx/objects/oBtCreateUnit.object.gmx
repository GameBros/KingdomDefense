<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCard_unit1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>0</persistent>
  <parentName>oGUI_Level</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;    
image_speed = 0;   
xSave = x;
 
ind = 0;
price = 0;
sprite = noone;

state = 0;              //0 = mouse is not on it, 1 = mouse is on it
coolingDown = 0;
coolDown = 60;
coolDownTimer = 60;

muenze_image = 0;

dragObj = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( global.crystals &gt;= price &amp;&amp; global.level_state == 0 )
{
    if!(state == 1 &amp;&amp; image_index == 1)
    image_index = 0;

    //making
    if (mouse_check_button_pressed(mb_left) and state == 1 and coolingDown == 0)
    {
        image_index = 1;
        if ( !instance_exists(dragObj) )
        {
            dragObj = instance_create(oCursor.x,oCursor.y,oUnitDrag);
            dragObj.sprite_index = sprite;
            dragObj.ind = ind;
            dragObj.myCard = id;
            dragObj.price = price;
            
            if( ind == 15 )
            {
                //Potion
                dragObj.myMgcAtk = scrGetUnitVar(15, 11);
            }
            coolingDown = 1;
        }
    }
}
else
{
    image_index = 2;
}

//state
goY = view_yview[0]
if ( instance_exists(oCursor) )
{
    if (global.HUD_state == 0 and (oCursor.x&gt;=x &amp;&amp; oCursor.x&lt;(x+55)) and oCursor.y&lt;(y+65))
    {
        state = 1;
    }
    else
    {
        state = 0;
        coolingDown = 0;
    }
}

muenze_image = state;

x = view_xview[0]+xSave;

//draw sprite
draw_sprite(sprite,image_index,x,y-global.YAdd);

str = string(price);
draw_set_font(fHUD);
price_y = ( y + 64 )-(string_height(str)/2)-8;
price_x = ( x + ( sprite_get_width(sprite) / 2))-( string_width(str) / 2);

muenzeX = price_x-(sprite_get_width(sMuenze)+1);

//draw price
draw_set_color(c_black);
draw_set_alpha(1);
draw_text(price_x,price_y-global.YAdd,str);

//draw muenze
draw_sprite(sMuenze,muenze_image,muenzeX,price_y+4-global.YAdd);

if( coolingDown &gt;= 1 )
{
    if( coolingDown == 2 )
    {
        coolDownTimer -= 1;
        
        if( coolDownTimer == 0 )    
        {
            coolDownTimer = coolDown;
            coolingDown = 0;
        }
    }

    draw_set_alpha(0.5);
    draw_rectangle(x,y,x+55,y+((coolDownTimer / coolDown)*64),false);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
