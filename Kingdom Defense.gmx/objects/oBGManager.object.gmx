<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>allBGs = global.lv_bgs;

ground = instance_create(0,0,oGround);
ground.bg = ds_list_find_value(allBGs,0);

forground = instance_create(0,0,oForGround);
forground.bg = ds_list_find_value(allBGs,5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i = 1;
while(i &lt; ds_list_size(allBGs)-1)
{
    bg = ds_list_find_value(allBGs,i);
    draw_x = 0;
    switch(i)
    {
        case 1: draw_x = view_xview[0]/1.15;
        break;
        case 2: draw_x = view_xview[0]/1.3;
        break;
        case 3: draw_x = view_xview[0]/(1.9);    
        break;
        case 4: draw_x = view_xview[0]/(2.6);    
        break;               
    }
        
    draw_y = view_yview[0];
  
    shift = ((view_xview[0]-draw_x)/800-0.5);    
    draw_x += round(shift)*800; 
    draw_sprite(bg,-1,draw_x,draw_y);   

    if (draw_x &lt; view_xview[0])
    draw_sprite(bg,-1,draw_x+800,draw_y);

    i += 1;
}

ground.draw_x = floor((view_xview[0])/800)*800;
ground.draw_y = view_yview[0];
ground.draw2 = (draw_x &lt; view_xview[0]); 
   
forground.draw_x = view_xview[0]/(-0.4);

shift = ((view_xview[0]-forground.draw_x)/800-0.5);    
forground.draw_x += round(shift)*800; 

forground.draw_y = view_yview[0];
forground.draw2 = (forground.draw_x &lt; view_xview[0]); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
